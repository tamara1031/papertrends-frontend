---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  disabled?: boolean;
  class?: string;
}

const { 
  variant = 'primary',
  size = 'md',
  href,
  disabled = false,
  class: className = ''
} = Astro.props;

let baseClasses = 'btn';
let variantClasses = '';
let sizeClasses = '';

// Variant styles
switch (variant) {
  case 'primary':
    variantClasses = 'btn-primary';
    break;
  case 'secondary':
    variantClasses = 'btn-secondary';
    break;
  case 'outline':
    variantClasses = 'btn-outline';
    break;
}

// Size styles  
switch (size) {
  case 'sm':
    sizeClasses = 'px-3 py-1.5 text-xs';
    break;
  case 'md':
    sizeClasses = 'px-4 py-2 text-sm';
    break;
  case 'lg':
    sizeClasses = 'px-6 py-3 text-base';
    break;
}

const classes = [baseClasses, variantClasses, sizeClasses, className];

if (disabled) {
  classes.push('opacity-50 cursor-not-allowed pointer-events-none');
}
---

{href ? (
  <a 
    href={href}
    class={classes.join(' ')}
  >
    <slot />
  </a>
) : (
  <button 
    class={classes.join(' ')}
    {...(disabled ? { disabled: true } : {})}
  >
    <slot />
  </button>
)}
