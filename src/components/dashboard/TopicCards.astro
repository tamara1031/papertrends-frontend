---
// Topic Cards Component
export interface Props {
  topics: Array<{
    id: string;
    name: string;
    count: number;
    keywords: [string, number][];
  }>;
}

const { topics } = Astro.props;
---

<div class="space-y-3">
  {topics.map((topic, index) => (
    <div class="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
      <div class="flex items-center justify-between mb-2">
        <div class="flex items-center space-x-2">
          <div class="w-6 h-6 bg-blue-100 dark:bg-blue-900 rounded-md flex items-center justify-center">
            <span class="text-blue-600 dark:text-blue-400 font-semibold text-xs">{index + 1}</span>
          </div>
          <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100">
            {topic.name}
          </h3>
        </div>
        <span class="text-xs font-medium text-gray-600 dark:text-gray-400">{topic.count}</span>
      </div>
      <div class="flex flex-wrap gap-1">
        {topic.keywords.slice(0, 2).map(([keyword, count]) => (
          <span class="px-2 py-1 bg-white dark:bg-gray-800 text-xs rounded-md text-gray-600 dark:text-gray-300">
            {keyword}
          </span>
        ))}
        {topic.keywords.length > 2 && (
          <span class="px-2 py-1 bg-white dark:bg-gray-800 text-xs rounded-md text-gray-500 dark:text-gray-400">
            +{topic.keywords.length - 2}
          </span>
        )}
      </div>
    </div>
  ))}
</div>
