---
import type { Topic, LegendVariant } from '../../types/dashboard';

export interface Props {
  topics: Topic[];
  colors: string[];
  variant: LegendVariant;
}

const { topics, colors, variant } = Astro.props;
---

{variant === 'desktop' && (
  <div class="hidden lg:block lg:w-1/5">
    <div class="w-full h-72 sm:h-80 md:h-96 lg:h-[400px] xl:h-[450px] flex flex-col justify-start pt-4">
      <div class="text-xs font-medium text-gray-700 dark:text-gray-300 mb-3">Topics</div>
      <div class="space-y-2">
        {topics.map((topic, index) => (
          <div class="flex items-center space-x-2">
            <div class="w-3 h-3 rounded-full" style={`background-color: ${colors[index]};`}></div>
            <span class="text-xs text-gray-600 dark:text-gray-400">{topic.name}</span>
          </div>
        ))}
      </div>
    </div>
  </div>
)}

{variant === 'mobile' && (
  <div class="block lg:hidden mt-4">
    <div class="text-xs font-medium text-gray-700 dark:text-gray-300 mb-3">Topics</div>
    
    <div class="legend-scrollbar overflow-x-auto">
      <div class="grid grid-cols-2 sm:grid-cols-3 gap-x-4 gap-y-3 pb-2 w-full">
        {topics.map((topic, index) => (
          <div class="flex items-center space-x-2">
            <div class="w-3 h-3 rounded-full flex-shrink-0" style={`background-color: ${colors[index]};`}></div>
            <span class="text-xs text-gray-600 dark:text-gray-400">{topic.name}</span>
          </div>
        ))}
      </div>
    </div>
  </div>
)}
